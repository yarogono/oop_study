// 스프링 입문을 위한 자바 객체 지향의 원리와 이해 153 ~ 157p

// static 블록 : 클래스가 스태틱 영역에 배치될 때 실행되는 코드
package staticBlock;

public class Driver {
    public static void main(String[] args) {
        // static 블록에서 사용할 수 있는 속성과 메서드는 당연히 static 멤버 뿐이다 => T메모리를 그려보면 알 수 있음.
        // 패키지 또는 클래스가 처음으로 사용될 때 T 메모리의 스태틱 영역에 로딩된다.
        Animal pororo = new Animal();

        // 동물 클래스의 인스턴스를 여러 개 만들어도 동물 클래스의 static 블록은 단 한번만 실행 된다.
        Animal pengsu = new Animal();

        System.out.println("main 메서드 시작!");
    }
}


/*
    클래스 정보는 해당 클래스가 코드에서 맨 처음 사용될 때 T 메모리의 스태틱 영역에 로딩되며,
    이때 단 한번 해당 클래스의 static 블록이 실행된다.

    클래스가 제일 처음 사용될 때의 세 가지 경우
    - 클래스의 정적 속성을 사용할 때
    - 클래스의 정적 메서드를 사용할 때
    - 클래스의 인스턴스를 최초로 만들 때
 */

// 왜 프로그램이 실행될 때 바로 클래스들의 정보를 T 메모리의 static 영역에 로딩하지 않고 해당 클래스가 처음 사용될 때 로딩할까?
// => 스태틱 영역도 메모리이기 때문이다. 메모리는 최대한 늦게 사용을 시작하고 빨리 반환하는 것이 정석이다.